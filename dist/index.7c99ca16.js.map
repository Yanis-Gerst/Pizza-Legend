{"mappings":"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","sources":["Script/Battle/BattleEvent.js"],"sourcesContent":["class BattleEvent {\n    constructor(event, battle) {\n        this.event = event\n        this.battle = battle\n    }\n\n    textMessage(resolve) {\n        \n        const text = this.event.text\n        .replace(\"{CASTER}\", this.event.caster?.name)\n        .replace(\"{TARGET}\", this.event.target?.name)\n        .replace(\"{ACTION}\", this.event.attack?.name)\n        \n        \n        const message = new TextMessage({\n            text: text,\n            onComplete: () => {\n                resolve()\n            }\n        })\n        message.init(this.battle.element)\n    }\n    \n    actionMenu(resolve) {\n        const menu = new ActionMenu({\n            caster: this.event.caster,\n            ennemy: this.event.ennemy,\n            items: this.battle.items,\n            replacement: Object.values(this.battle.combatants).filter(combatant => {\n                return  combatant.id !== this.event.caster.id && combatant.team === this.event.caster.team\n            }),\n            onComplete: action => {\n                //L'action qu'on doit faire selon le choix fait\n                resolve(action)\n            }\n        })\n        menu.init(this.battle.element)\n    }\n    init(resolve) {\n        this[this.event.type](resolve)\n    }\n    \n    getAmountOfDamage(caster, target) {\n\n        let amountOfDamage  = caster.attack * this.event.action.attack.power\n        if (caster.buff?.buffAtk) amountOfDamage = amountOfDamage * caster.buff.buffAtk\n        if (caster.debuff?.debuffAtk) amountOfDamage = amountOfDamage * caster.debuff.debuffAtk\n        const typeAttack = this.event.action.attack.typeAttack\n        const targetType = target.type\n        const defenseModifier = 1 - target.defense / 100\n        const efficiency = window.pizzas.getTypeEffect(typeAttack, targetType)\n\n        amountOfDamage = Math.round(amountOfDamage * efficiency * defenseModifier)\n        \n        return {amountOfDamage, efficiency}\n    }\n\n    getAmountOfSpecialDamage(caster, target) {\n        //Buff && debuff\n        const powerOfSpeAtk = this.event.power\n        let amountOfDamage  = caster.attackSpe * powerOfSpeAtk\n        if (caster.buff?.buffAtkSpe) amountOfDamage = amountOfDamage * caster.buff.buffAtkSpe\n        if (caster.debuff?.debuffAtkSpe) amountOfDamage = amountOfDamage * caster.debuff.debuffAtkSpe\n        const defenseModifier = 1 - target.defenseSpe / 100\n        \n        amountOfDamage = Math.round(amountOfDamage * defenseModifier)\n       \n        return amountOfDamage\n    }\n\n    getAmountOfHeal(caster, target) {\n        //Forte chance que ça change, Donne un pourcentage entre x et x % selon les stats\n        const powerOfHeal = this.event.power\n        let amountOfHeal = caster.attackSpe * powerOfHeal\n        const defenseModifier = 1 - target.defenseSpe / 100\n        amountOfHeal = Math.round(amountOfHeal * defenseModifier)\n        return amountOfHeal\n    }\n\n    async stateChange(resolve) {\n        const {caster, target, damage, specialDamage, recovery, power, status} = this.event\n        const who = this.event.onCaster ? caster : target\n        let efficiency = null;\n        if (damage) {\n            const battleInfo = this.getAmountOfDamage(caster, target)\n            this.amountOfDamage = battleInfo.amountOfDamage\n            efficiency = battleInfo.efficiency\n            target.update({\n                hp: target.hp - this.amountOfDamage\n            })\n            target.pizzaElement.classList.add(\"taking-damage\")\n            \n        } else if (specialDamage) {\n            this.amountOfDamage = this.getAmountOfSpecialDamage(target, caster)\n            \n            who.update({\n                hp: who.hp - this.amountOfDamage\n            })\n            caster.pizzaElement.classList.add(\"taking-damage\")\n        }\n\n        if (recovery) {\n            if (typeof(recovery) === \"number\") {\n                this.amountOfHeal = recovery\n            } else {\n                this.amountOfHeal = this.getAmountOfHeal(caster, target)\n            }\n           \n            \n            let newHp = caster.hp + this.amountOfHeal\n            if (newHp > caster.maxHp) {\n                newHp = caster.maxHp\n            }\n            caster.update({\n                hp: newHp\n            })\n        }\n\n        if (status) {\n          \n            const power = this.event.action.attack.power\n            const statusId = status.id\n            const statusConfig = window.attack[statusId]\n            let whoIsBuff = who\n            \n            if (statusConfig.buff) {\n                whoIsBuff = await this.teamMenu()          \n            }\n            const effect = this.getStatusEffect(statusConfig)\n\n            whoIsBuff.update({\n                [effect]: {\n                    name: statusConfig.name,\n                    caster: caster, \n                    expireIn: status.expireIn,\n                    power: power,\n                }\n            })\n           \n            if (statusConfig.buff || statusConfig.debuff) {\n                whoIsBuff.getBuff()\n            }\n        }\n\n        if (status === null) {\n            who.update({\n                buff: null,\n                debuff: null,\n                specialDamage: null,\n            })\n            \n        }\n\n        await utils.wait(600)\n\n        let feedBackText;\n        if(damage) {\n            feedBackText = this.getFeedBackMessage(efficiency)\n        } \n\n        target.pizzaElement.classList.remove(\"taking-damage\")\n        caster.pizzaElement.classList.remove(\"taking-damage\")\n        this.battle.playerTeam.update()\n        this.battle.ennemyTeam.update()\n        \n        if (feedBackText) {\n            //Efficency + nb Dmg\n            const feedBackTextMessage = new TextMessage({\n                text: feedBackText,\n                onComplete: () => {\n                    //Txt avec les dégats afficher\n                    const textDamage = new TextMessage({\n                        text: `${target.name} a subit ${this.amountOfDamage} dégats`,\n                        onComplete: () => {\n                            resolve()\n                        }\n                    })\n                    textDamage.init(this.battle.element)\n                }\n            })\n            feedBackTextMessage.init(this.battle.element)\n\n        } else if (damage) {\n            //nb Dmg\n            const textMessage = new TextMessage({\n                text: `${target.name} a subit ${this.amountOfDamage} dégats`,\n                onComplete: () => {\n                    resolve()\n                }\n            })\n            textMessage.init(this.battle.element)\n        } else if (specialDamage) {\n            //nb Special Damage\n            const feedBackTextMessage = new TextMessage({\n                text: `${caster.name} subit ${this.amountOfDamage} dégats`,\n                onComplete: () => {\n                    resolve()\n                }\n            }) \n            feedBackTextMessage.init(this.battle.element)\n        } else if (recovery) {\n            const feedBackTextMessage = new TextMessage({\n                text: `${caster.name} se soigne de ${this.amountOfHeal} Hp.`,\n                onComplete: () => {resolve()}\n            })\n            feedBackTextMessage.init(this.battle.element)\n        } else {\n            resolve()          \n        }\n\n\n    }\n\n    animation(resolve) {\n        window.battleAnimation[this.event.animation](this.event, resolve)\n    }\n\n    async switch(resolve) {\n        const replacer = this.event.replacer\n        //reset l'ancienne pizza\n        let prevCombatant = this.battle.activeCombatants[replacer.team]\n        prevCombatant = this.battle.combatants[prevCombatant]      \n        this.battle.activeCombatants[replacer.team] = null;\n        prevCombatant.update()\n\n        await utils.wait(400)\n\n        //On met le nouveau\n        this.battle.activeCombatants[replacer.team] = replacer.id\n        replacer.update()\n\n        await utils.wait(400)\n\n        //Update Team Hud\n    \n        this.battle.playerTeam.update()\n        this.battle.ennemyTeam.update()\n        \n\n        resolve()\n\n    }\n\n    teamMenu() {\n        const menu = new TeamMenu({battle: this.battle})\n        return new Promise((resolve) => {\n            menu.init(resolve)\n        })\n    }\n\n    replacementMenu(resolve) {\n        const allReplacer =  Object.values(this.battle.combatants).filter(combatant => {\n            return combatant.team === this.event.team && combatant.hp > 0\n        })\n        const replacementMenu = new ReplacementMenu({\n            replacements: allReplacer,\n            onComplete: (replacer) => {\n                resolve(replacer)\n            }\n        })\n \n        replacementMenu.init(this.battle.element)\n\n        \n    }\n\n    giveXp(resolve) {\n        //Async Give Xp wait Menu -> Enter Player\n        let amount = this.event.xp\n        let who = this.event.combatant\n        const step = async () => {\n            \n            if (amount > 0 && who.maxXp - who.xp > 50) {\n                amount -= 3\n                who.xp += 3\n            } else if (amount > 0 && who.maxXp - who.xp <= 50) {\n                amount -= 1\n                who.xp += 1\n\n                if (who.xp === who.maxXp) {\n\n                    //Event for Lvl Up\n                    utils.createCustomEvent(\"pizzaLvlUp\", {\n                        whoPizz: who\n                    })\n                    \n                    \n                    await who.notifPizza.init(this.battle.element)\n                    who.update()\n                    \n                }\n            }\n\n            if (amount > 0) {\n                who.update()\n                requestAnimationFrame(step)\n                return\n            }\n            \n            resolve()\n            return\n        }\n        requestAnimationFrame(step)\n    }\n\n    getStatusEffect(statusConfig) {\n        if (statusConfig.buff) return \"buff\"\n        if (statusConfig.debuff) return \"debuff\"\n        if (statusConfig.specialDamage) return \"specialDamage\"\n        if (statusConfig.recovery) return \"recovery\"\n    } \n\n    getFeedBackMessage(efficiency) {\n        if (efficiency > 1) {\n            return \"C'est super efficace\"\n        } else if (efficiency < 1) {\n            return \"C'est pas très éfficace\"\n        } else {\n            return null\n        }\n    }\n}\n"],"names":[],"version":3,"file":"index.7c99ca16.js.map","sourceRoot":"/__parcel_source_root/"}