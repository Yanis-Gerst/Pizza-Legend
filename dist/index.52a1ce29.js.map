{"mappings":"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","sources":["Script/PauseMenu.js"],"sourcesContent":["class PauseMenu {\n    constructor({progress, onComplete}) {\n        this.onComplete = onComplete\n        this.progress = progress\n    }\n\n    getOptions(pageKey, currentPizzaId = null) {\n    \n    const backOptions = {\n        label: \"Back\",\n        descriptions: \"Arriéere\",\n        handler: () => {\n            this.menu.setOptions(this.getOptions(\"root\"))\n        }\n    } \n    if (pageKey === \"root\") {\n            return [\n                {\n                    label:\"Team\",\n                    descriptions:\"Change pizza Lineup\",\n                    handler: () => {\n                        this.menu.setOptions(this.getOptions(\"team\"))\n                    }\n                },\n                {\n                    label:\"Save\",\n                    descriptions:\"Save your Progress\",\n                    handler: () => { \n                        this.progress.save()\n                        this.close()\n                    }\n                },\n                {\n                    label:\"Objet\",\n                    descriptions:\"Voir vos Objet\",\n                    handler: () => {\n                        this.menu.setOptions(this.getOptions(\"item\"))\n                    }\n                },\n                {\n                    label:\"Close\",\n                    descriptions:\"Close the Pause Menu\",\n                    handler: () => {\n                        this.close()\n                    }\n                }\n                \n            ]\n        }\n\n        else if (pageKey === \"team\")  {\n            let lineupPizza = []\n            for (let i = 0; i < 4;i++) {\n                const id = playerState.lineup[i]\n\n                if (id) {\n                    const {pizzaId} = playerState.pizzas[id]\n                    const base = pizzas[pizzaId]\n                    lineupPizza.push({\n                        label: base.name,\n                        descriptions: base.descriptions,\n                        handler: () => {\n                            this.menu.setOptions(this.getOptions(\"Switch\", id))\n                        }\n                    })\n                } else {\n                    lineupPizza.push({\n                        label: \"__Empty__\",\n                        descriptions: \"Vous n'avez pas de pizza\",\n                        handler: () => {\n                            this.menu.setOptions(this.getOptions(\"unEquippedPizza\"))\n                        }\n                    })\n                }\n            }\n\n            return [\n                ...lineupPizza,\n                backOptions\n            ]\n        }\n\n        else if (pageKey === \"Switch\") {\n            //Faire un cas quand ya personne\n        \n            const unequiped = Object.keys(playerState.pizzas).filter(id => {\n                return playerState.lineup.indexOf(id) === -1\n            }).map(id => {\n                const {pizzaId} = playerState.pizzas[id]\n                const base = pizzas[pizzaId]\n                return {\n                    label: `Switch ${base.name}`,\n                    descriptions: base.descriptions,\n                    handler: () => {\n                        playerState.swapLineup(currentPizzaId, id);\n                        this.menu.setOptions(this.getOptions(\"root\"))\n                    }                  \n                }\n            })\n            \n            return [\n                {\n                    label: `Mettre en tête d'équipe`,\n                    descriptions: \"undefined\",\n                    handler: () => {\n                        playerState.moveToFront(currentPizzaId)\n                        this.menu.setOptions(this.getOptions(\"root\"))\n                    }\n                },\n                {\n                    label: \"Voir Statistique\",\n                    descriptions: \"\",\n                    handler: () => {\n                        this.menu.setOptions(this.getOptions(\"statistique\", currentPizzaId))\n                    }\n                },\n                ...unequiped,\n                backOptions\n            ]\n        } else if (pageKey === \"unEquippedPizza\") {\n\n            const unequiped = this.pizzaUnequipped((id) => {\n                playerState.lineup.push(id)\n                utils.createCustomEvent(\"lineupChanged\")\n            })\n\n            return [\n                ...unequiped,\n                backOptions\n            ]\n        } else if (pageKey === \"statistique\") {\n            const currentPizza = playerState.pizzas[currentPizzaId]\n            return [\n                {\n                    label: `Niveau: ${currentPizza.level}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Pv: ${currentPizza.hp} / ${currentPizza.maxHp}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Attaque: ${currentPizza.attack}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Defense: ${currentPizza.defense}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Attaque.Spe: ${currentPizza.attackSpe}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Vitesse: ${currentPizza.speed}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n                {\n                    label: `Exp: ${currentPizza.xp} / ${currentPizza.maxXp}`,\n                    descriptions: \"\",\n                    disable: true,\n                    handler: () => {}\n                },\n               \n                backOptions\n            ]\n        } else if (pageKey === \"item\") {\n            let quantityItems = {}\n            playerState.items.forEach(item => {\n                if (!quantityItems[item.actionsId]) {\n                    quantityItems[item.actionsId] = {\n                        actionsId: item.actionsId,\n                        quantity: 1,\n                        instanceId: item.instanceId\n                    }\n                } else {\n                    quantityItems[item.actionsId].quantity += 1\n                }\n            })\n            \n            const itemsList =  Object.keys(quantityItems).map(actionId => {\n                const itemConfig = window.items[actionId]\n                const quantityItem = quantityItems[actionId]\n                return {\n                    label: itemConfig.name,\n                    descriptions: itemConfig.descriptions,\n                    disable: true,\n                    right: () => {\n                        return `${quantityItem.quantity}x`\n                    },\n                    handler: () => {}\n                }\n            })\n\n            return [\n                ...itemsList,\n                backOptions\n            ]\n            \n        }\n    } \n\n    pizzaUnequipped(cbHandler) {\n        const unequiped = Object.keys(playerState.pizzas).filter(id => {\n            return playerState.lineup.indexOf(id) === -1\n        }).map(id => {\n            const {pizzaId} = playerState.pizzas[id]\n            const base = pizzas[pizzaId]\n            return {\n                label: `Equipper ${base.name}`,\n                descriptions: base.descriptions,\n                handler: () => {\n                    cbHandler(id)\n                    this.close()\n                }\n            }\n        })\n\n        return unequiped\n    }\n    \n    close() {\n        \n        this.esc?.unbind()\n        this.menu.end()\n        this.element.remove()\n        this.onComplete()\n    }\n\n    createElement() {\n        this.element = document.createElement(\"div\")\n        this.element.classList.add(\"overlayMenu\")\n        this.element.innerHTML = (`\n            <h2>Pause Menu</h2>\n        `)\n    }\n\n    async init(container) {\n        this.createElement()\n        this.menu = new KeyboardMenu({\n            descriptionsContainer: container    \n        })\n        this.menu.init(this.element)\n        this.menu.setOptions(this.getOptions(\"root\"))\n\n        container.appendChild(this.element)\n\n        await utils.wait(200)\n\n        this.esc = new KeyPressListener(\"&\", () => {\n            this.close()\n        }, {once: true})\n    }\n}"],"names":[],"version":3,"file":"index.52a1ce29.js.map","sourceRoot":"/__parcel_source_root/"}