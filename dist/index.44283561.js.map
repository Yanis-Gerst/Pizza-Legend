{"mappings":"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","sources":["Script/Overworld.js"],"sourcesContent":["startPosition()\n\n\n//config = gameContainer\nclass Overlord {\n    constructor(config) {\n        //Init\n        this.element = config\n        this.canvas = this.element.querySelector(\".game-canvas\")\n        this.ctx = this.canvas.getContext(\"2d\")\n        this.gameFrameCounter = 0  \n        \n        //Test Area\n        \n    }\n\n    startGameLoop() {\n      \n        const step = () => {\n            //Clear the canvas \n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            const cameraPerson = {\n                person: this.map.gameObject.hero,\n                centerX: withGrid(10.5),\n                centerY: withGrid(6),\n            }\n            \n            //Update Game Object\n\n            Object.values(this.map.gameObject).forEach(object => {\n               \n                object.update({\n                    movInput: this.input.direction,\n                    map: this.map\n                })\n            })\n            //Draw LowerMap\n            this.map.drawLowerMap(this.ctx, cameraPerson)\n\n            \n            //Game Object\n            Object.values(this.map.gameObject).sort((a, b) => {\n                return a.y - b.y\n            }).forEach(object => {\n                //Draw GameObject\n                object.draw(this.ctx, cameraPerson)\n            })\n\n            //Draw Upper map\n            this.map.drawUpperMap(this.ctx, cameraPerson)\n\n\n            //Recursion On every Frame\n           \n            requestAnimationFrame(step)\n            \n            \n            \n        }\n        step();\n    }\n\n    checkHeroPosition() {   \n        document.addEventListener(\"IFinishWalk\", e => {\n            if (e.detail.whoId === \"hero\") {\n                this.map.checkCaseEvent()\n            }\n        })\n    }\n\n    startMap(mapSrc,heroInitialState = null, overworld) {\n        let ancientMap;\n        if (this.map) {\n            ancientMap = this.map\n        }\n        this.map = new Map(mapSrc, overworld)\n        this.map.overworld = this\n        const hero = this.map.gameObject.hero\n        if (heroInitialState) {\n            this.map.removeWalls(hero.x, hero.y)\n            hero.x = heroInitialState.x\n            hero.y = heroInitialState.y\n            hero.direction = heroInitialState.direction\n            this.map.addWalls(hero.x, hero.y)  \n        }\n        ancientMap?.disapearObject()\n        setTimeout(() => {\n            this.map.appearObject()\n        }, 10)\n\n        this.progress.mapId = mapSrc.id\n        this.progress.startingHeroX = hero.x\n        this.progress.startingHeroY = hero.Y\n        this.progress.startingHeroDirection = hero.direction\n\n        \n    }\n\n    bindActionInput() {\n        \n        this.interactInput = new KeyPressListener(\"f\", () => (\n            this.map.checkInteraction()\n        ))\n\n        this.pauseInput = new KeyPressListener(\"&\", () => {\n            if (!this.map.cutscenePlaying) {\n                this.map.startCutscene([{\n                    type:\"pause\"\n                }])\n            }\n        })\n\n    }\n\n    intro() {\n        window.playerState.getPlayerName(this.map)\n    }\n\n    init() {\n\n        //save File area\n        this.progress = new Progress()\n        let heroInitialState = null;\n        const saveFile = this.progress.load()\n        \n        \n        this.input = new Input()\n        this.input.init()\n        this.hud = new Hud()\n        this.hud.init(this.element)\n        playerState.moneyIcon.init(this.element)\n        this.startMap(window.overworldMaps[this.progress.mapId], heroInitialState, this)\n        \n        \n        \n        this.startGameLoop()\n        this.bindActionInput()\n        this.checkHeroPosition()\n        \n        \n        if (saveFile) {\n            heroInitialState = {\n                x: this.progress.startingHeroX,\n                y: this.progress.startingHeroy,\n                direction: this.progress.startingHeroDirection,\n            }\n        } else {\n            setTimeout(() => {\n                this.intro()\n            }, 100)    \n        }\n    }\n\n     \n \n}\n\n\n\n\n\n"],"names":[],"version":3,"file":"index.44283561.js.map","sourceRoot":"/__parcel_source_root/"}