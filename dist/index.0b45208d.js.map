{"mappings":"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","sources":["Script/Battle/actionMenu.js"],"sourcesContent":["class ActionMenu {\n    constructor({caster, ennemy, items, replacement, onComplete}) {\n        this.caster = caster\n        this.ennemy = ennemy \n        this.onComplete = onComplete\n        this.replacement = replacement\n        \n        let quantityItems = {}\n        items.forEach(item => {\n            if (item.team === this.caster.team) {\n\n                if (!quantityItems[item.actionsId]) {\n                    quantityItems[item.actionsId] = {\n                        actionsId: item.actionsId,\n                        quantity: 1,\n                        instanceId: item.instanceId\n                    }\n                } else {\n                    quantityItems[item.actionsId].quantity += 1\n                }\n            }\n            \n        })\n\n        this.items = Object.values(quantityItems)\n    \n    }\n\n\n    submitMenu(action, instanceId = null) {\n       \n        this.keyboardMenu?.end()\n        this.onComplete({\n            attack: action,\n            target: this.ennemy,   \n            instanceId\n        })\n    }\n\n    submitMenuReplace(replacer) {\n        this.keyboardMenu?.end()\n\n        this.onComplete({\n            replacement: replacer\n        })\n    }\n\n    decide() {\n        const typeTarget = this.ennemy.type\n        \n        const typeConflictDef = pizzas.getTypeEffect(typeTarget, this.caster.type)\n        const typeConflictOff = pizzas.getTypeEffect(this.caster.type, typeTarget)\n       //Select the attack most efficient & powerful\n       // Jte résiste me buff si j'ai pas de buuf\n       // Tu tape fort jte débuff si t'as pas de débuff\n       // J'ai -25hp me heal et que t'as plus de 20% de ta vie\n\n       const defaultAttackOptions = window.attack[this.caster.actions[0]]\n       let attackOptions = {\n           attack: defaultAttackOptions,\n           efficiency: pizzas.getTypeEffect(defaultAttackOptions.typeAttack, typeTarget),\n           power: defaultAttackOptions.power\n       }\n       \n\n        for (let i = 0; i < this.caster.actions.length; i++) {\n            let attack = window.attack[this.caster.actions[i]]\n            let efficiency = pizzas.getTypeEffect(attack.typeAttack, typeTarget)\n            let power = attack.power \n\n            const asignAttackOptions = () => {\n                attackOptions.attack = attack\n                attackOptions.efficiency = efficiency ? efficiency : 1\n                attackOptions.power = power\n           }\n   \n            if (attack.buff && !this.buff && typeConflictDef < 1) {\n                asignAttackOptions()\n                break\n            } else if (attack.debuff && !this.ennemy.debuff && typeConflictDef > 1) {\n                asignAttackOptions()\n                break\n            } else if (attack.specialDamage && !this.ennemy.specialDamage &&  utils.getRandomNumber() > 75) {\n                asignAttackOptions()\n                break\n            } else if (attack.recovery && this.caster.hpPercent <= 25 && this.ennemy.hpPercent > 20) {\n                asignAttackOptions()\n                break\n            }\n                \n\n            if (efficiency > attackOptions.efficiency && !attack.buff && ! attack.debuff && attack.specialDamage && attack.recovery) {\n                asignAttackOptions()\n            } else if (efficiency === attackOptions.efficiency && power > attackOptions.power && !attack.buff && ! attack.debuff && attack.specialDamage && attack.recovery) {\n                asignAttackOptions()\n            }\n        }\n        this.onComplete({\n            attack: attackOptions.attack, \n            target: this.ennemy\n        })\n    }\n\n\n    getPages() {\n\n        const backOptions = {\n            label: \"Back\",\n            descriptions: \"Revenir en arrière\",\n            handler: () => {\n                this.keyboardMenu.setOptions( this.getPages().root)\n            }\n        }\n        return {\n            root: [\n            {\n                label:\"Attack\",\n                descriptions:\"Choisir une attaque\",\n                handler: () => {\n                    this.keyboardMenu.setOptions(this.getPages().attacks)\n                }\n            },\n            {\n            label: \"Items\",\n            descriptions: \"Choisir un Item\",\n            handler: () => {\n                    this.keyboardMenu.setOptions( this.getPages().items)\n                }\n            },\n            {\n                label: \"Swap\",\n                descriptions: \"Changer de Pizza\",\n                handler: () => {\n                    this.keyboardMenu.setOptions(this.getPages().switch)\n                }\n            },     \n          ],\n\n          attacks: [\n            ...this.caster.actions.map(key => {\n                const action = window.attack[key]\n               \n                return {\n                    label: action.name,\n                    descriptions: action.descriptions,\n                    handler: () => {\n                        this.submitMenu(action)\n                    }\n                }\n            }),\n              backOptions\n          ],\n          items: [\n              ...this.items.map(item => {\n                  const itemAction = window.attack[item.actionsId]\n                  return {\n                      label: itemAction.name,\n                      descriptions: itemAction.descriptions,\n                      right: () => {\n                        return   \"x\" + item.quantity\n                      },\n                      handler: () => {\n                          this.submitMenu(itemAction, item.instanceId)\n                      }\n                  }\n\n              }),\n              backOptions\n          ],\n          switch: [\n                ...this.replacement.filter(replacer => {\n                    return replacer.hp > 0\n                }).map((replacer) => {\n                    return {\n                        label: replacer.name,\n                        descriptions: replacer.descriptions,\n                        handler: () => {\n                            this.submitMenuReplace(replacer)\n                        },\n                        right: () => {\n                            //a voir si on laisse\n                            return `${replacer.hp} Hp`\n                        }\n                    }\n                }),\n              backOptions\n          ]\n        }\n        \n        \n    } \n\n    showMenu(container) {\n        this.keyboardMenu = new KeyboardMenu()\n        this.keyboardMenu.init(container)\n        this.keyboardMenu.setOptions( this.getPages().root)\n    }\n\n\n    \n    init(container) {\n        if (this.caster.isPlayerControlled) {\n            this.showMenu(container)\n        } else {\n            this.decide()\n        }\n    }\n\n   \n}"],"names":[],"version":3,"file":"index.0b45208d.js.map","sourceRoot":"/__parcel_source_root/"}