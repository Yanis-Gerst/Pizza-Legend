{"mappings":"AAAA,MAAM,MAAM,SAAS,MAAM;IACvB,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC,MAAM,CAAC,CAAC;KACjB;IACD,MAAM,CAAC,KAAK,EAAE;QAGV,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,eAAe,KAAK,KAAK;YACrD,IAAI,IAAI,CAAC,kBAAkB,KAAK,CAAC,EAC7B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBACtB,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,KAAK,CAAC,QAAQ;aAC5B,CAAC;iBAGK,KAAK,CAAC,QAAQ,EAAI,IAAI,CAAC,SAAS,CA0B1C;SACJ;QAED,IAAI,CAAC,aAAa,EAAE;QACpB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;KAE3B;CAEJ","sources":["Script/playableCharacters.js"],"sourcesContent":["class Player extends Person {\n    constructor(config) {\n        super(config);\n    }\n    update(state) {\n      \n\n        if (state.movInput && state.map.cutscenePlaying === false) {\n            if (this.moveProgressRemain === 0) { \n                this.startBehavior(state, {\n                    type: \"walk\",\n                    direction: state.movInput\n                })\n                \n\n            } else if (state.movInput != this.direction) {\n                //Cancel haut et bas movement + fluide\n                // let ContraryDirection = utils.checkContraryDirection(state.movInput, this.direction)[0]\n                // let wichSide = utils.checkContraryDirection(state.movInput, this.direction)[1]\n\n                // if (ContraryDirection) {\n                //     if (wichSide === \"height\") {\n                //         var x = this.x\n                //         if (state.movInput === \"up\") {\n                //             var y = this.y + this.moveProgressRemain\n                //         } else {\n                //             var y = this.y - this.moveProgressRemain\n                //         }\n                //     } else if (wichSide === \"side\") {\n                //         var y = this.y\n                //         if (state.movInput === \"left\") {\n                //             var x = this.x + this.moveProgressRemain\n                //         } else {\n                //             var x = this.x - this.moveProgressRemain\n                //         }\n                //     }\n                //     this.moveProgressRemain = 16 - this.moveProgressRemain\n                //     this.direction = state.movInput\n                //     state.map.moveWalls(x, y, this.direction)\n                // }\n\n            }\n        }\n        \n        this.updatePostion()\n        this.updateSprite(state)\n        \n    }\n\n}"],"names":[],"version":3,"file":"index.02ba38a2.js.map","sourceRoot":"/__parcel_source_root/"}