{"mappings":"AAAA,MAAM,IAAI,SAAS,UAAU;IACzB,YAAY,MAAM,CAAE;QAChB,KAAK,CAAC,MAAM,CAAC;KAChB;IAED,UAAU,GAAG;QACT,OAAO;YACH;gBACI,KAAK,EAAC,kBAAe;gBACpB,YAAW,EAAE,2BAAwB;gBACrC,KAAI,EAAE,IAAM;oBACT,OAAO,MAAM,CAAA;iBAChB;gBACD,OAAO,EAAE,IAAM;oBACX,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC;iBACpC;aAEJ;YACD;gBACI,KAAK,EAAC,oBAAiB;gBACtB,YAAW,EAAE,4BAAyB;gBACtC,KAAI,EAAE,IAAM;oBACT,OAAO,MAAM,CAAA;iBAChB;gBACD,OAAO,EAAE,IAAM;oBACX,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC;iBACpC;aAEJ;YACD;gBACI,KAAK,EAAC,oBAAiB;gBACtB,YAAW,EAAE,2BAAwB;gBACtC,KAAK,EAAE,IAAM;oBACT,OAAO,OAAO,CAAA;iBACjB;gBACD,OAAO,EAAE,IAAM;oBACX,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC;iBACrC;aAEJ;YACD;gBACI,KAAK,EAAC,cAAc;gBACpB,YAAY,EAAE,sBAAsB;gBACpC,KAAK,EAAE,IAAM;oBACT,OAAO,IAAI,CAAA;iBACd;gBACD,OAAO,EAAE,IAAM;oBACX,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;iBAC7B;aAEJ;YACD;gBACI,KAAK,EAAC,MAAM;gBACZ,YAAY,EAAE,SAAS;gBACvB,OAAO,EAAE,IAAM;oBACX,IAAI,CAAC,KAAK,EAAE;iBACf;aAEJ;SACJ,CAAA;KACJ;IACD,aAAa,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAI,CAAC;;QAE3B,CAAC,AAAC;KAEL;IAED,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE;QAClB,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,EAAE,OAAM;QACrC,WAAW,CAAC,KAAK,IAAI,KAAK;QAC1B,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;QACxE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;YAAC,SAAS;YAAE,UAAU,EAAE,aAAa;SAAC,CAAC;QAC9D,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC;KAC1C;IAED,KAAK,GAAG;QACJ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACrB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;QACf,IAAI,CAAC,UAAU,EAAE;KACpB;IAED,IAAI,CAAC,SAAS,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC;YACzB,qBAAqB,EAAE,SAAS;SACnC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACvC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;KACtC;CACJ","sources":["Script/Shop.js"],"sourcesContent":["class Shop extends GameObject {\n    constructor(config) {\n        super(config)\n    }\n\n    getOptions() {\n        return [\n            {\n                label:'Huile à Pizza',\n                descriptions: \"Soin de faible qualité\",\n                right: () => {\n                    return \"200$\"\n                },\n                handler: () => {\n                    this.buy(\"basicHealingItem\", 200)\n                }\n\n            },\n            {\n                label:'Huile à Pizza +',\n                descriptions: \"Soin de moyenne qualité\",\n                right: () => {\n                    return \"850$\"\n                },\n                handler: () => {\n                    this.buy(\"superHealingItem\", 850)\n                }\n\n            },\n            {\n                label:'Huile à Pizza +',\n                descriptions: \"Soin de grande qualité\",\n                right: () => {\n                    return \"1550$\"\n                },\n                handler: () => {\n                    this.buy(\"hyperHealingItem\", 1550)\n                }\n\n            },\n            {\n                label:'Purification',\n                descriptions: \"Purifier votre pizza\",\n                right: () => {\n                    return \"1$\"\n                },\n                handler: () => {\n                    this.buy(\"resetStatus\", 1)\n                }\n\n            },\n            {\n                label:'Back',\n                descriptions: \"Quitter\",\n                handler: () => {\n                    this.close()\n                }\n\n            },\n        ]\n    }\n    createElement() {\n        this.element = document.createElement(\"div\")\n        this.element.classList.add(\"overlayMenu\")\n        this.element.innerHTML = (`\n        <h2>Shop Menu</h2>\n        `)\n     \n    }\n\n    buy(actionsId, price) {\n        if (playerState.money < price) return\n        playerState.money -= price\n        const newInstanceId = `h${Date.now()}`+ Math.floor(Math.random() * 9999) \n        playerState.items.push({actionsId, instanceId: newInstanceId})\n        utils.createCustomEvent(\"moneyChanged\")\n    }\n\n    close() {\n        this.element.remove()\n        this.menu.end()\n        this.onComplete()\n    }\n\n    init(container) {\n        this.createElement()\n        this.menu = new KeyboardMenu({\n            descriptionsContainer: container\n        })\n        this.menu.init(this.element)\n        this.menu.setOptions(this.getOptions())\n        container.appendChild(this.element)\n    }\n}"],"names":[],"version":3,"file":"index.7d8a9929.js.map","sourceRoot":"/__parcel_source_root/"}