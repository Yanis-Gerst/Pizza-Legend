{"mappings":"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","sources":["Script/Map.js"],"sourcesContent":["\nclass Map {\n    constructor(config, overworld) {\n        \n        this.upperImage = new Image()\n        this.upperImage.src = config.upperSrc || \"\"\n        this.lowerImage = new Image()\n        this.lowerImage.src = config.lowerSrc || \"\"\n        this.overworld = overworld;\n        this.walls = config.walls || {}\n        this.gameObject = config.gameObject\n        this.caseEvent = config.caseEvent || {}\n        this.cutscenePlaying = false\n        this.id = config.id\n        \n    }\n\n    drawUpperMap(ctx, cameraPerson) {\n        let x = cameraPerson.centerX - cameraPerson.person.x + 8 // 8 + character sprite\n        let y = cameraPerson.centerY - cameraPerson.person.y + 18 // 18 = character sprite\n        ctx.drawImage(\n            this.upperImage,\n            x, y\n        )\n    }\n\n    drawLowerMap(ctx, cameraPerson) {\n        let x = cameraPerson.centerX - cameraPerson.person.x + 8 // 8 + character sprite\n        let y = cameraPerson.centerY - cameraPerson.person.y + 18 // 18 = character sprite\n        ctx.drawImage(\n            this.lowerImage,\n            x, y\n        )\n    }\n\n    isSpaceTaken(currentX, currentY, direction) {\n        const {x, y} = nextPosition(currentX, currentY, direction)\n       \n        return this.walls[`${x}, ${y}`] || false\n    }\n\n    addWalls(x, y) {\n        this.walls[`${x}, ${y}`] = true\n    }\n\n    removeWalls(x, y) {\n        delete this.walls[`${x}, ${y}`] \n    }\n\n    moveWalls(wasX, wasY, direction) {\n        const {x ,y} = nextPosition(wasX, wasY, direction)\n        this.removeWalls(wasX, wasY)\n        this.addWalls(x, y)  \n    }\n\n    onEventBlock() {\n        return this.intersection[`${this.gameObject.hero.x}, ${this.gameObject.hero.y}`] || false\n    }\n\n\n    appearObject() {\n        Object.keys(this.gameObject).forEach(key => {\n\n            let object = this.gameObject[key]\n            object.id = key\n            //System pour voir si l'object doit apparait ou pas ex: une clé qui est pickup\n            object.appear(this)\n        })\n    }\n\n    disapearObject() {\n        Object.keys(this.gameObject).forEach(key => {\n            let object = this.gameObject[key]\n            object.id = key\n            //System pour voir si l'object doit apparait ou pas ex: une clé qui est pickup\n            object.disappear(this)\n        })\n    }\n\n    async startCutscene(events) {\n        this.cutscenePlaying = true\n        let isChangingMap = false\n        for (let i = 0; i < events.length; i++) {     \n            if (events[i].type === \"changeMap\") { \n                isChangingMap = true\n                //Reset position + Behavior Npcs\n            }\n            const eventHandler = new OverworldEvent({\n                map: this,\n                eventConfig: events[i]\n            })\n            //On attend le await avant de continuer dans la boucle\n            const result = await eventHandler.init();\n            if (result === \"LOST_BATTLE\" || result === \"CLOSED_CRAFT_MENU\") {\n                break;\n            }\n            \n        }\n    \n        this.cutscenePlaying = false\n        \n        \n        if (isChangingMap) return\n        Object.values(this.gameObject).forEach(obj => {\n            obj.doBehaviorEvent(this)\n        })\n       \n        utils.createCustomEvent(\"endOfCutscene\")\n    }\n\n    checkCaseEvent() {\n        //Add requires System\n        const hero = this.gameObject['hero']\n        const match = this.caseEvent[`${hero.x}, ${hero.y}`] || false\n        let rightEvent = []\n        if (match.length && !this.cutscenePlaying) {\n            //Look for the right Event with Story Flag  \n            rightEvent = utils.checkRequires(match)     \n                   \n            this.startCutscene(rightEvent)\n        } else if (match && !this.cutscenePlaying) {\n            this.startCutscene(match.event)\n        }\n    }   \n    \n    checkInteraction() {\n        //A Changer pour modifier le Player\n   \n        const hero = this.gameObject['hero']\n        const nextCords = nextPosition(hero.x, hero.y, hero.direction)\n\n        const match = Object.values(this.gameObject).find(object => {\n            return `${object.x}, ${object.y}` === `${nextCords.x}, ${nextCords.y}`\n        })\n       \n        if (!this.cutscenePlaying && match && match.talking.length) {\n            const theScenario = match.talking.find(scenario => {\n                return (scenario.requires || []).every(storyFlags => {\n                    return playerState.storyFlags[storyFlags]\n                })\n            })\n            theScenario && this.startCutscene(theScenario.box)\n        } \n    }\n\n\n    resetPosition() {\n        this.allNpcsId = Object.keys(this.gameObject).filter(gameObject => {         \n            return gameObject.includes(\"npc\")      \n        })\n        //Remet la position d'origine des Npcs\n        this.allNpcsId.forEach(npcId => {\n            const npc = this.gameObject[npcId]\n            npc.x = npc.startX\n            npc.y = npc.startY\n            npc.direction = npc.startDirection\n            //Wall\n            this.removeWalls(npc.x, npc.y)\n            this.addWalls(npc.startX, npc.startY)\n            //Reset Behavior\n            npc.behaviorLoopIndex = 0\n            npc.moveProgressRemain = 0\n            //Finir le walking pour tout les Npcs\n            utils.createCustomEvent(\"IFinishWalk\", {\n                whoId: this.id\n            })\n            \n        })\n    }\n}"],"names":[],"version":3,"file":"index.74958208.js.map","sourceRoot":"/__parcel_source_root/"}