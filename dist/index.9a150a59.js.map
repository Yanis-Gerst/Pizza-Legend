{"mappings":"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","sources":["Script/Battle/Battle.js"],"sourcesContent":["class Battle {\n    constructor({ennemyId, onComplete}) {    \n        this.ennemy = ennemyId\n        this.onComplete = onComplete\n    \n      \n        this.combatants = {\n        }\n\n        this.activeCombatants = {\n            player: null,\n            ennemy: null\n        }\n        \n        //Player Pizzas\n        window.playerState.lineup.forEach(id => {\n            this.addCombatant(id, \"player\", window.playerState.pizzas[id])\n        })\n\n        //Ennemy Pizza\n        Object.keys(this.ennemy.pizzas).forEach(key => {\n            this.addCombatant(\"e_\" + key, \"ennemy\", this.ennemy.pizzas[key])\n        })\n        //Mettre les Id\n\n        Object.keys(this.combatants).forEach(key => {    \n            let combatant = this.combatants[key]\n            combatant.id = key\n        })\n\n        //Items \n        this.items = []\n        window.playerState.items.forEach(item => {\n            this.items.push({\n                ...item,\n                team: \"player\"\n            })\n        })\n        \n        this.usedIntancesId = {}\n        \n      \n    }\n\n    createElement() {\n        this.element = document.createElement(\"div\")\n        this.element.classList.add(\"battle\")\n\n        //Mettre les Perso\n        this.element.innerHTML = (`\n            <div class=\"battle-hero\">\n                <img src=\"${'/images/characters/people/hero.png'}\" alt=\"Hero\" />\n            </div>\n\n            <div class=\"battle-ennemy\">\n                <img src=\"${this.ennemy.src}\" alt=\"Hero\" />\n            </div>\n        `)\n    }\n\n    addCombatant(id, team, config) {\n        this.combatants[id] = new Combatant({\n            ...window.pizzas[config.pizzaId],\n            ...config,\n            team,\n            isPlayerControlled: team === \"player\"\n        }, this)\n\n        //Le premier ajouter est sur le terrain\n        this.activeCombatants[team] = this.activeCombatants[team] || id\n    }\n\n    init(container) {\n        \n        this.createElement()\n        container.appendChild(this.element)\n\n        this.playerTeam = new Team(\"player\", \"Hero\")\n        this.ennemyTeam = new Team(\"ennemy\", \"Richard\")\n        Object.values(this.combatants).forEach(combatant => {\n            combatant.init(this.element)\n\n            if (combatant.team === \"player\") {\n                this.playerTeam.combatants.push(combatant)\n            } else if (combatant.team === \"ennemy\") {\n                this.ennemyTeam.combatants.push(combatant)\n            }\n        })\n\n        this.playerTeam.init(this.element)\n        this.ennemyTeam.init(this.element)\n        \n        this.turnCycle = new TurnCycle({\n            battle: this,\n            onNewEvent: event => {\n                return new Promise(resolve => {\n                    const battleEvent = new BattleEvent(event, this)\n                    battleEvent.init(resolve)\n                })\n            },\n            onWinner: winner => {\n                if (winner === \"player\") {          \n                    const playerState = window.playerState\n                    Object.keys(playerState.pizzas).forEach(id => {\n                        \n                        const playerStatePizza = playerState.pizzas[id]\n                        const wasFight = this.combatants[id]\n                      \n                        //Persistant Stat\n                        if (wasFight) {\n                            //Pizza Persistant\n                            //Lors d'une dÃ©fait prend du dernier notifPizza update a voir si on change \n                            playerStatePizza.attack = wasFight.attack\n                            playerStatePizza.defense = wasFight.defense\n                            playerStatePizza.hp = wasFight.hp\n                            playerStatePizza.maxHp = wasFight.maxHp\n                            playerStatePizza.level = wasFight.level\n                            playerStatePizza.xp = wasFight.xp\n                            playerStatePizza.maxXp = wasFight.maxXp\n                            playerStatePizza.actions = wasFight.actions\n                            playerStatePizza.speed = wasFight.speed\n                                \n                        }\n\n                        //Persistant Item\n                        playerState.items = playerState.items.filter(item => {\n                            return !this.usedIntancesId[item.instanceId]\n                        })\n                    }) \n                    //Basic Earning Money entre 0 et 200 random\n                    playerState.money += Math.floor(Math.random() * 100 + Math.random() * 100)\n                    utils.createCustomEvent(\"moneyChanged\")\n\n\n                }\n                this.element.remove()\n                this.onComplete(winner === \"player\")\n                utils.createCustomEvent(\"PlayerStateUpdated\")\n            }\n        })\n\n        this.turnCycle.init()\n    }\n}"],"names":[],"version":3,"file":"index.9a150a59.js.map","sourceRoot":"/__parcel_source_root/"}